/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as LoginRouteImport } from "./routes/login"
import { Route as AuthenticatedRouteImport } from "./routes/_authenticated"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as AuthenticatedForumsRouteImport } from "./routes/_authenticated/forums"
import { Route as AuthenticatedForumsForumIdRouteImport } from "./routes/_authenticated/forums_/$forumId"
import { Route as AuthenticatedForumsForumIdNewRouteImport } from "./routes/_authenticated/forums_/$forumId_/new"
import { Route as AuthenticatedForumsForumIdPostIdRouteImport } from "./routes/_authenticated/forums_/$forumId_/$postId"

const LoginRoute = LoginRouteImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedForumsRoute = AuthenticatedForumsRouteImport.update({
  id: "/forums",
  path: "/forums",
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedForumsForumIdRoute = AuthenticatedForumsForumIdRouteImport.update({
  id: "/forums_/$forumId",
  path: "/forums/$forumId",
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedForumsForumIdNewRoute = AuthenticatedForumsForumIdNewRouteImport.update({
  id: "/forums_/$forumId_/new",
  path: "/forums/$forumId/new",
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedForumsForumIdPostIdRoute = AuthenticatedForumsForumIdPostIdRouteImport.update({
  id: "/forums_/$forumId_/$postId",
  path: "/forums/$forumId/$postId",
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/login": typeof LoginRoute
  "/forums": typeof AuthenticatedForumsRoute
  "/forums/$forumId": typeof AuthenticatedForumsForumIdRoute
  "/forums/$forumId/$postId": typeof AuthenticatedForumsForumIdPostIdRoute
  "/forums/$forumId/new": typeof AuthenticatedForumsForumIdNewRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/login": typeof LoginRoute
  "/forums": typeof AuthenticatedForumsRoute
  "/forums/$forumId": typeof AuthenticatedForumsForumIdRoute
  "/forums/$forumId/$postId": typeof AuthenticatedForumsForumIdPostIdRoute
  "/forums/$forumId/new": typeof AuthenticatedForumsForumIdNewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/_authenticated": typeof AuthenticatedRouteWithChildren
  "/login": typeof LoginRoute
  "/_authenticated/forums": typeof AuthenticatedForumsRoute
  "/_authenticated/forums_/$forumId": typeof AuthenticatedForumsForumIdRoute
  "/_authenticated/forums_/$forumId_/$postId": typeof AuthenticatedForumsForumIdPostIdRoute
  "/_authenticated/forums_/$forumId_/new": typeof AuthenticatedForumsForumIdNewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/login" | "/forums" | "/forums/$forumId" | "/forums/$forumId/$postId" | "/forums/$forumId/new"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/login" | "/forums" | "/forums/$forumId" | "/forums/$forumId/$postId" | "/forums/$forumId/new"
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/login"
    | "/_authenticated/forums"
    | "/_authenticated/forums_/$forumId"
    | "/_authenticated/forums_/$forumId_/$postId"
    | "/_authenticated/forums_/$forumId_/new"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/login": {
      id: "/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_authenticated/forums": {
      id: "/_authenticated/forums"
      path: "/forums"
      fullPath: "/forums"
      preLoaderRoute: typeof AuthenticatedForumsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    "/_authenticated/forums_/$forumId": {
      id: "/_authenticated/forums_/$forumId"
      path: "/forums/$forumId"
      fullPath: "/forums/$forumId"
      preLoaderRoute: typeof AuthenticatedForumsForumIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    "/_authenticated/forums_/$forumId_/new": {
      id: "/_authenticated/forums_/$forumId_/new"
      path: "/forums/$forumId/new"
      fullPath: "/forums/$forumId/new"
      preLoaderRoute: typeof AuthenticatedForumsForumIdNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    "/_authenticated/forums_/$forumId_/$postId": {
      id: "/_authenticated/forums_/$forumId_/$postId"
      path: "/forums/$forumId/$postId"
      fullPath: "/forums/$forumId/$postId"
      preLoaderRoute: typeof AuthenticatedForumsForumIdPostIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedForumsRoute: typeof AuthenticatedForumsRoute
  AuthenticatedForumsForumIdRoute: typeof AuthenticatedForumsForumIdRoute
  AuthenticatedForumsForumIdPostIdRoute: typeof AuthenticatedForumsForumIdPostIdRoute
  AuthenticatedForumsForumIdNewRoute: typeof AuthenticatedForumsForumIdNewRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedForumsRoute: AuthenticatedForumsRoute,
  AuthenticatedForumsForumIdRoute: AuthenticatedForumsForumIdRoute,
  AuthenticatedForumsForumIdPostIdRoute: AuthenticatedForumsForumIdPostIdRoute,
  AuthenticatedForumsForumIdNewRoute: AuthenticatedForumsForumIdNewRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(AuthenticatedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()
